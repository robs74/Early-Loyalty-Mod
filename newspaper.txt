include("include/SOVIETInstructions.txt");
include("settings.txt");
include("include/helper_functions.txt");

defineVariable(int, n);
defineVariable(int, i);
defineVariable(int, j);
defineVariable(int, k);
defineVariable(int, l);
defineVariable(int, worker_id);
defineVariable(Person, worker);
defineVariable(Building, building);
defineVariable(int, population);

defineVariable(int, editors);
defineVariable(float, editors_total_loyalty);
defineVariable(float, editors_avg_loyalty);
defineVariable(float, newspaper_efficiency);
defineVariable(float, negative_newspaper_efficiency);
defineVariable(int, can_read);
defineVariable(float, culture);
defineVariable(char, active_radio);
defineVariable(char, active_tv);
defineVariable(float, individual_effectiveness);

defineVariable(int, spo); //spo - secret police officer(s)
defineVariable(float, spo_total_loyalty);
defineVariable(float, spo_avg_loyalty);
defineVariable(float, censorship_efficiency);

defineVariable(int, cinemas_workers);
defineVariable(int, cinema_workers);
defineVariable(float, cinema_total_loyalty);
defineVariable(float, cinema_avg_loyalty);
defineVariable(float, target_loyalty);

defineFunction(UpdateState, void)
{
	Building_GetNumberOfBuildings(n);
	population = 0;
	editors = 0;
	editors_total_loyalty = 0.0;
	cinemas_workers = 0;
	spo = 0;
	active_radio = 0;
	active_tv = 0;
	for (i=0, i<n, i=i+1)
	{
		building.GetDataByIndex(i);
		if(building.nType ? BUILDINGTYPE_BROADCAST & building.nSubType ? BUILDINGSUBTYPE_RADIO & building.nWorkersNum > 0 & building.fPercFinished ? 1.0)
		{
			active_radio = 1;
		}
		if(building.nType ? BUILDINGTYPE_BROADCAST & building.nSubType ? BUILDINGSUBTYPE_TELEVISION & building.nWorkersNum > 0 & building.fPercFinished ? 1.0)
		{
			active_tv = 1;
		}
		if(building.nType ? BUILDINGTYPE_KINO)
		{
			cinemas_workers = cinemas_workers + building.nWorkersNum;
		}
		if(building.nType ? BUILDINGTYPE_SECRET_POLICE & building.nVehiclesWorkingNum > 0)
		{
			spo = spo + building.nWorkersNum;
			for (j=0, j<building.nWorkersNum, j=j+1)
			{
				Building_Workers_GetID(i, j, worker_id);
				worker.GetDataByIndex(worker_id);
				spo_total_loyalty = spo_total_loyalty + worker.fStatusSoviet;
			}
		}
		if(building.nType ? BUILDINGTYPE_LIVING)
		{
			population = population + building.nWorkersNum;
		}
		//newspaper is a secret police office without any vehicles
		if(building.nType ? BUILDINGTYPE_SECRET_POLICE & building.nVehiclesWorkingNum < 1)
		{
			editors = editors + building.nWorkersNum;
			for (j=0, j<building.nWorkersNum, j=j+1)
			{
				Building_Workers_GetID(i, j, worker_id);
				worker.GetDataByIndex(worker_id);
				editors_total_loyalty = editors_total_loyalty + worker.fStatusSoviet;
			}
		}
	}
	returnVoid();
}

defineFunction(CalculateEfficiency, void)
{
	editors_avg_loyalty = 0.0;
	newspaper_efficiency = 0.0;
	negative_newspaper_efficiency = 0.0;
	censorship_efficiency = 0.0;
	spo_avg_loyalty = 0.0;
	if(editors > 0)
	{
		editors_avg_loyalty = editors_total_loyalty / editors;
		newspaper_efficiency = MaxFloat(editors * EDITOR_EFFICIENCY / population, 1.0) * NEWSPAPER_STRENGTH;
		negative_newspaper_efficiency = (2.0 - MaxFloat(editors * EDITOR_EFFICIENCY / population, 1.0)) * editors_avg_loyalty * NEWSPAPER_STRENGTH;
	}
	if(spo > 0)
	{
		spo_avg_loyalty = spo_total_loyalty / spo;
		censorship_efficiency = 1.0;
		if(cinemas_workers > 0)
		{
			censorship_efficiency = MaxFloat(spo * SPO_EFFICIENCY / cinemas_workers, 1.0);
		}
	}
	if(DISABLE_OBJECTIVES ? 0 & (NEWSPAPER_STRENGTH > 0.0 | SHOW_STRENGTH > 0.0))
	{
		Objectives_ClearAll();
		Objectives_CreateNewString("press", "Press and shows");
		Objective_AddRequirement("press", population * 1.0 / EDITOR_EFFICIENCY + 1.0, "newspaper_icon.png");
		Objective_UpdateRequirement("press", 0, editors * 1.0);
		if(SHOW_STRENGTH > 0.0)
		{
			Objective_AddRequirement("press", cinemas_workers * 1.0 / SPO_EFFICIENCY + 1.0, "editor/status_culture.png");
			Objective_UpdateRequirement("press", 1, spo * 1.0);
		}
	}
	returnVoid();
}

defineFunction(ReadNewspaper, void, int:id)
{
	worker.GetDataByIndex(id);
 	can_read = worker.bIsHome + worker.fEducation - 1.0;
	individual_effectiveness = 1.0;
	if(worker.fStatusElectronic > 2.0 & active_tv ? 1)
	{
		individual_effectiveness = 0.25;
	}
	elseif(worker.fStatusElectronic > 1.0 & active_radio ? 1)
	{
		individual_effectiveness = 0.5;
	}
	if(can_read > 0)
	{
		if(worker.fStatusSoviet < LOYALTY_MAX_NEWSPAPER)
		{
			//increase loyalty
			Person_SetStatus(id, 3, Clamp(worker.fStatusSoviet + newspaper_efficiency * editors_avg_loyalty * individual_effectiveness * LOYALTY_FACTOR / 6.0, 0.0, LOYALTY_MAX_NEWSPAPER));
		}
		if(culture > 0.0 & worker.fStatusCulture < LOYALTY_MAX_NEWSPAPER + culture)
		{
			//increase culture, the more the more efficient is your newspaper
			Person_SetStatus(id, 5, Clamp(worker.fStatusCulture + newspaper_efficiency * individual_effectiveness * culture / 30.0, 0.0, LOYALTY_MAX_NEWSPAPER + culture));
		}
		elseif(culture < 0.0)
		{
			//decrease culture, the more the less efficient is your newspaper
			Person_SetStatus(id, 5, Clamp(worker.fStatusCulture + negative_newspaper_efficiency * individual_effectiveness * culture / 30.0, 0.0, 1.0));
		}
	}
	returnVoid();
}

defineFunction(WatchShow, void, int:id2)
{
	worker.GetDataByIndex(worker_id);
	target_loyalty = censorship_efficiency * spo_avg_loyalty + (1.0 - censorship_efficiency) * cinema_avg_loyalty;
	target_loyalty = MaxFloat(target_loyalty, cinema_avg_loyalty);
	if(worker.fStatusSoviet < MinFloat(LOYALTY_MAX_NEWSPAPER, target_loyalty))
	{
		//increase loyalty
		Person_SetStatus(id2, 3, Clamp(worker.fStatusSoviet + SHOW_STRENGTH, 0.0, 1.0));
	}
	elseif(worker.fStatusSoviet > target_loyalty)
	{
		//decrease loyalty
		Person_SetStatus(id2, 3, Clamp(worker.fStatusSoviet - SHOW_STRENGTH, 0.0, 1.0));
	}
	returnVoid();
}

defineFunction(main, void)
{
	InitConstants();
	InitSettings();
	//check correctness of the constants in the settings file
	LOYALTY_FACTOR = Clamp(LOYALTY_FACTOR, 0.0, 1.0);
	EDITOR_EFFICIENCY = MaxFloat(EDITOR_EFFICIENCY, 1.0);
	NEWSPAPER_STRENGTH = Clamp(NEWSPAPER_STRENGTH, 0.0, 1.0);
	SHOW_STRENGTH = Clamp(SHOW_STRENGTH, 0.0, 1.0);
	SPO_EFFICIENCY = MaxFloat(SPO_EFFICIENCY, 1.0);
	LOYALTY_MAX_NEWSPAPER = Clamp(LOYALTY_MAX_NEWSPAPER, 0.0, 1.0);
	LOYALTY_MAX_SHOW = Clamp(LOYALTY_MAX_SHOW, 0.0, 1.0);
	
	culture = 0.75 - LOYALTY_FACTOR;
	while(1 ? 1)
	{
		UpdateState();
		CalculateEfficiency();
		Script_EnterCriticalSection();
 		for (i=0, i<n, i=i+1)
		{
			building.GetDataByIndex(i);
 			if(building.nType ? BUILDINGTYPE_LIVING)
			{
				for (j=0, j<building.nWorkersNum, j=j+1)
				{
					Building_Workers_GetID(i, j, worker_id);
					ReadNewspaper(worker_id);
				}
			}
			if(building.nType ? BUILDINGTYPE_KINO)
			{
				cinema_total_loyalty = 0.0;
				if(building.nWorkersNum > 0)
				{
					for(j=0, j < building.nWorkersNum, j=j+1)
					{
						Building_Workers_GetID(i, j, worker_id);
						worker.GetDataByIndex(worker_id);
						cinema_total_loyalty = cinema_total_loyalty + worker.fStatusSoviet;
					}
					cinema_avg_loyalty = cinema_total_loyalty / building.nWorkersNum;
					for (j=0, j<building.nWorkersSecondaryNum, j=j+1)
					{
						Building_WorkersSecondary_GetID(i, j, worker_id);
						WatchShow(worker_id);
					}
				}
			}
		}
		Script_LeaveCriticalSection();
		Script_Sleep(9.5);
	}
	end();
}
